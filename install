#!/bin/bash

VERSION=v3.17.0

set -e

help() {
  echo "Usage:"
  echo "  zmicro package install task <args...>"
  echo ""
}

install() {
  # prepare vars
  local name="task"
  # get system os/arch
  local arch="$(os::arch)"
  local kernel="$(os::kernel)"
  # usr_bin_dir
  local usr_bin_dir=$(os::usr_bin_dir)
  local tmp_dir="/tmp/$name"
  # files
  local tmp_file="$name.tar.gz"
  local bin_file="$name"

  if [ "$kernel" = "Linux" ]; then
    kernel="linux"
  elif [ "$kernel" = "Darwin" ]; then
    kernel="darwin"
  fi

  # prepare context
  mkdir -p $tmp_dir
  cd $tmp_dir

  # reference: https://github.com/go-task/task/releases
  # example:
  #   https://github.com/go-task/task/releases/download/v3.17.0/task_darwin_amd64.tar.gz
  #   https://github.com/go-task/task/releases/download/v3.17.0/task_darwin_arm64.tar.gz
  # generate url
  local url="https://github.com/go-task/task/releases/download/$VERSION/${name}_${kernel}_${arch}.tar.gz"
  log::debug "[package][$name][$kernel][$arch] url: $url"

  # download
  os::curl --progress-bar -fSL $url -o $tmp_file

  # extract
  tar -zxvf $tmp_file >>/dev/null 2>&1

  # install
  sudo mv $bin_file $usr_bin_dir

  # clean
  rm -rf $tmp_dir
}

core() {
  if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    help
    exit 0
  fi

  install
  if [ $? -eq 0 ]; then
    log::success "install task success."
    exit 0
  else
    log::error "install task failed."
    exit 1
  fi
}

run() {
  core $@
}

run $@
